{{ if exists "/nginx/ssl/force/redirect" }}
server {
    listen      80 default_server;
    return      307 https://$host$request_uri;
}
{{ end }}

server {
{{ if not (exists "/nginx/ssl/force/redirect") }}
    listen     80 default_server;
{{ end }}
    #Using global cert let's also listen on 443
    listen     443 default_server ssl;

    rewrite_log  on;
    access_log  /var/log/app/nginx.access.log;
    error_log   /var/log/app/nginx.error.log error;


# Defaults to /app/public if NGINX_ROOT isn't set
{{ if exists "/nginx/root" }}
    set $root "{{ getv "/nginx/root" }}";
{{ end }}
{{ if not (exists "/nginx/root") }}
    set $root "/app/public";
{{ end }}

    root $root;

    location =/meta.json {
        alias /app/META;
    }

    # i.e. deny access to .htaccess in case someone will create it
    location ~ /\. {
        deny  all;
    }

    # Add HTTP Strict Transport Security header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; ";

# Defaults to index.html if NGINX_INDEX isn't set
{{ if exists "/nginx/index" }}
    set $index "{{ getv "/nginx/index" }}";
{{ end }}
{{ if not (exists "/nginx/index") }}
    set $index "index.html";
{{ end }}

    index $index;

    fastcgi_buffers 256 16k;
    fastcgi_buffer_size 128k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;

    location / {
        try_files $uri $uri/ /$index$is_args$args;
    }

    # Optionally include app-specific config files
    include /etc/nginx/app.conf.d/*.conf;

}